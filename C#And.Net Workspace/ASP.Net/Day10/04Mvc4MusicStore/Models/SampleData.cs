using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.Entity;
using _04Mvc4MusicStore.Models;

namespace MvcMusicStore.Models
{
    public class SampleData : DropCreateDatabaseIfModelChanges<MusicStoreEntities>
    {
        protected override void Seed(MusicStoreEntities context)
        {
            var genres = new List<Genre>
            {
                new Genre { GenreName = "Rock" },
                new Genre { GenreName = "Jazz" },
                new Genre { GenreName = "Metal" },
                new Genre { GenreName = "Alternative" },
                new Genre { GenreName = "Disco" },
                new Genre { GenreName = "Blues" },
                new Genre { GenreName = "Latin" },
                new Genre { GenreName = "Reggae" },
                new Genre { GenreName = "Pop" },
                new Genre { GenreName = "Classical" }
            };

            var artists = new List<Artist>
            {
                new Artist { ArtistName = "Aaron Copland & London Symphony Orchestra" },
                new Artist { ArtistName = "Aaron Goldberg" },
                new Artist { ArtistName = "AC/DC" },
                new Artist { ArtistName = "Accept" },
                new Artist { ArtistName = "Adrian Leaper & Doreen de Feis" },
                new Artist { ArtistName = "Aerosmith" },
                new Artist { ArtistName = "Aisha Duo" },
                new Artist { ArtistName = "Alanis Morissette" },
                new Artist { ArtistName = "Alberto Turco & Nova Schola Gregoriana" },
                new Artist { ArtistName = "Alice In Chains" },
                new Artist { ArtistName = "Amy Winehouse" },
                new Artist { ArtistName = "Anita Ward" },
                new Artist { ArtistName = "Antônio Carlos Jobim" },
                new Artist { ArtistName = "Apocalyptica" },
                new Artist { ArtistName = "Audioslave" },
                new Artist { ArtistName = "Barry Wordsworth & BBC Concert Orchestra" },
                new Artist { ArtistName = "Berliner Philharmoniker & Hans Rosbaud" },
                new Artist { ArtistName = "Berliner Philharmoniker & Herbert Von Karajan" },
                new Artist { ArtistName = "Billy Cobham" },
                new Artist { ArtistName = "Black Label Society" },
                new Artist { ArtistName = "Black Sabbath" },
                new Artist { ArtistName = "Boston Symphony Orchestra & Seiji Ozawa" },
                new Artist { ArtistName = "Britten Sinfonia, Ivor Bolton & Lesley Garrett" },
                new Artist { ArtistName = "Bruce Dickinson" },
                new Artist { ArtistName = "Buddy Guy" },
                new Artist { ArtistName = "Caetano Veloso" },
                new Artist { ArtistName = "Cake" },
                new Artist { ArtistName = "Calexico" },
                new Artist { ArtistName = "Cássia Eller" },
                new Artist { ArtistName = "Chic" },
                new Artist { ArtistName = "Chicago Symphony Orchestra & Fritz Reiner" },
                new Artist { ArtistName = "Chico Buarque" },
                new Artist { ArtistName = "Chico Science & Nação Zumbi" },
                new Artist { ArtistName = "Choir Of Westminster Abbey & Simon Preston" },
                new Artist { ArtistName = "Chris Cornell" },
                new Artist { ArtistName = "Christopher O'Riley" },
                new Artist { ArtistName = "Cidade Negra" },
                new Artist { ArtistName = "Cláudio Zoli" },
                new Artist { ArtistName = "Creedence Clearwater Revival" },
                new Artist { ArtistName = "David Coverdale" },
                new Artist { ArtistName = "Deep Purple" },
                new Artist { ArtistName = "Dennis Chambers" },
                new Artist { ArtistName = "Djavan" },
                new Artist { ArtistName = "Donna Summer" },
                new Artist { ArtistName = "Dread Zeppelin" },
                new Artist { ArtistName = "Ed Motta" },
                new Artist { ArtistName = "Edo de Waart & San Francisco Symphony" },
                new Artist { ArtistName = "Elis Regina" },
                new Artist { ArtistName = "English Concert & Trevor Pinnock" },
                new Artist { ArtistName = "Eric Clapton" },
                new Artist { ArtistName = "Eugene Ormandy" },
                new Artist { ArtistName = "Faith No More" },
                new Artist { ArtistName = "Falamansa" },
                new Artist { ArtistName = "Foo Fighters" },
                new Artist { ArtistName = "Frank Zappa & Captain Beefheart" },
                new Artist { ArtistName = "Fretwork" },
                new Artist { ArtistName = "Funk Como Le Gusta" },
                new Artist { ArtistName = "Gerald Moore" },
                new Artist { ArtistName = "Gilberto Gil" },
                new Artist { ArtistName = "Godsmack" },
                new Artist { ArtistName = "Gonzaguinha" },
                new Artist { ArtistName = "Göteborgs Symfoniker & Neeme Järvi" },
                new Artist { ArtistName = "Guns N' Roses" },
                new Artist { ArtistName = "Gustav Mahler" },
                new Artist { ArtistName = "Incognito" },
                new Artist { ArtistName = "Iron Maiden" },
                new Artist { ArtistName = "James Levine" },
                new Artist { ArtistName = "Jamiroquai" },
                new Artist { ArtistName = "Jimi Hendrix" },
                new Artist { ArtistName = "Joe Satriani" },
                new Artist { ArtistName = "Jorge Ben" },
                new Artist { ArtistName = "Jota Quest" },
                new Artist { ArtistName = "Judas Priest" },
                new Artist { ArtistName = "Julian Bream" },
                new Artist { ArtistName = "Kent Nagano and Orchestre de l'Opéra de Lyon" },
                new Artist { ArtistName = "Kiss" },
                new Artist { ArtistName = "Led Zeppelin" },
                new Artist { ArtistName = "Legião Urbana" },
                new Artist { ArtistName = "Lenny Kravitz" },
                new Artist { ArtistName = "Les Arts Florissants & William Christie" },
                new Artist { ArtistName = "London Symphony Orchestra & Sir Charles Mackerras" },
                new Artist { ArtistName = "Luciana Souza/Romero Lubambo" },
                new Artist { ArtistName = "Lulu Santos" },
                new Artist { ArtistName = "Marcos Valle" },
                new Artist { ArtistName = "Marillion" },
                new Artist { ArtistName = "Marisa Monte" },
                new Artist { ArtistName = "Martin Roscoe" },
                new Artist { ArtistName = "Maurizio Pollini" },
                new Artist { ArtistName = "Mela Tenenbaum, Pro Musica Prague & Richard Kapp" },
                new Artist { ArtistName = "Men At Work" },
                new Artist { ArtistName = "Metallica" },
                new Artist { ArtistName = "Michael Tilson Thomas & San Francisco Symphony" },
                new Artist { ArtistName = "Miles Davis" },
                new Artist { ArtistName = "Milton Nascimento" },
                new Artist { ArtistName = "Mötley Crüe" },
                new Artist { ArtistName = "Motörhead" },
                new Artist { ArtistName = "Nash Ensemble" },
                new Artist { ArtistName = "Nicolaus Esterhazy Sinfonia" },
                new Artist { ArtistName = "Nirvana" },
                new Artist { ArtistName = "O Terço" },
                new Artist { ArtistName = "Olodum" },
                new Artist { ArtistName = "Orchestra of The Age of Enlightenment" },
                new Artist { ArtistName = "Os Paralamas Do Sucesso" },
                new Artist { ArtistName = "Ozzy Osbourne" },
                new Artist { ArtistName = "Page & Plant" },
                new Artist { ArtistName = "Paul D'Ianno" },
                new Artist { ArtistName = "Pearl Jam" },
                new Artist { ArtistName = "Pink Floyd" },
                new Artist { ArtistName = "Queen" },
                new Artist { ArtistName = "R.E.M." },
                new Artist { ArtistName = "Raul Seixas" },
                new Artist { ArtistName = "Red Hot Chili Peppers" },
                new Artist { ArtistName = "Roger Norrington, London Classical Players" },
                new Artist { ArtistName = "Royal Philharmonic Orchestra & Sir Thomas Beecham" },
                new Artist { ArtistName = "Rush" },
                new Artist { ArtistName = "Santana" },
                new Artist { ArtistName = "Scholars Baroque Ensemble" },
                new Artist { ArtistName = "Scorpions" },
                new Artist { ArtistName = "Sergei Prokofiev & Yuri Temirkanov" },
                new Artist { ArtistName = "Sir Georg Solti & Wiener Philharmoniker" },
                new Artist { ArtistName = "Skank" },
                new Artist { ArtistName = "Soundgarden" },
                new Artist { ArtistName = "Spyro Gyra" },
                new Artist { ArtistName = "Stevie Ray Vaughan & Double Trouble" },
                new Artist { ArtistName = "Stone Temple Pilots" },
                new Artist { ArtistName = "System Of A Down" },
                new Artist { ArtistName = "Temple of the Dog" },
                new Artist { ArtistName = "Terry Bozzio, Tony Levin & Steve Stevens" },
                new Artist { ArtistName = "The 12 Cellists of The Berlin Philharmonic" },
                new Artist { ArtistName = "The Black Crowes" },
                new Artist { ArtistName = "The Cult" },
                new Artist { ArtistName = "The Doors" },
                new Artist { ArtistName = "The King's Singers" },
                new Artist { ArtistName = "The Police" },
                new Artist { ArtistName = "The Posies" },
                new Artist { ArtistName = "The Rolling Stones" },
                new Artist { ArtistName = "The Who" },
                new Artist { ArtistName = "Tim Maia" },
                new Artist { ArtistName = "Ton Koopman" },
                new Artist { ArtistName = "U2" },
                new Artist { ArtistName = "UB40" },
                new Artist { ArtistName = "Van Halen" },
                new Artist { ArtistName = "Various Artists" },
                new Artist { ArtistName = "Velvet Revolver" },
                new Artist { ArtistName = "Vinícius De Moraes" },
                new Artist { ArtistName = "Wilhelm Kempff" },
                new Artist { ArtistName = "Yehudi Menuhin" },
                new Artist { ArtistName = "Yo-Yo Ma" },
                new Artist { ArtistName = "Zeca Pagodinho" }
            };

            new List<Album>
            {
                new Album { AlbumTitle = "A Copland Celebration, Vol. I", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Aaron Copland & London Symphony Orchestra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Worlds", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Aaron Goldberg"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "For Those About To Rock We Salute You", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "AC/DC"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Let There Be Rock", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "AC/DC"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Balls to the Wall", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Accept"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Restless and Wild", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Accept"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Górecki: Symphony No. 3", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Adrian Leaper & Doreen de Feis"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Big Ones", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Aerosmith"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Quiet Songs", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Aisha Duo"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Jagged Little Pill", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Alanis Morissette"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Facelift", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Alice In Chains"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Frank", AlbumGenre = genres.Single(g => g.GenreName == "Pop"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Amy Winehouse"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Ring My Bell", AlbumGenre = genres.Single(g => g.GenreName == "Disco"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Anita Ward"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Chill: Brazil (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Antônio Carlos Jobim"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Warner 25 Anos", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Antônio Carlos Jobim"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Plays Metallica By Four Cellos", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Apocalyptica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Revelations", AlbumGenre = genres.Single(g => g.GenreName == "Alternative"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Audioslave"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Audioslave", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Audioslave"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Last Night of the Proms", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Barry Wordsworth & BBC Concert Orchestra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Sibelius: Finlandia", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Berliner Philharmoniker & Hans Rosbaud"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Mozart: Symphonies Nos. 40 & 41", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Berliner Philharmoniker & Herbert Von Karajan"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best Of Billy Cobham", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Billy Cobham"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Alcohol Fueled Brewtality Live! [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Black Label Society"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Alcohol Fueled Brewtality Live! [Disc 2]", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Black Label Society"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Black Sabbath Vol. 4 (Remaster)", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Black Sabbath"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Black Sabbath", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Black Sabbath"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Carmina Burana", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Boston Symphony Orchestra & Seiji Ozawa"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "A Soprano Inspired", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Britten Sinfonia, Ivor Bolton & Lesley Garrett"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Chemical Wedding", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Bruce Dickinson"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Prenda Minha", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Caetano Veloso"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Sozinho Remix Ao Vivo", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Caetano Veloso"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Cake: B-Sides and Rarities", AlbumGenre = genres.Single(g => g.GenreName == "Alternative"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Cake"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Carried to Dust (Bonus Track Version)", AlbumGenre = genres.Single(g => g.GenreName == "Alternative"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Calexico"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Cássia Eller - Sem Limite [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Cássia Eller"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Le Freak", AlbumGenre = genres.Single(g => g.GenreName == "Disco"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chic"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Scheherazade", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chicago Symphony Orchestra & Fritz Reiner"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Minha Historia", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chico Buarque"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Afrociberdelia", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chico Science & Nação Zumbi"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Da Lama Ao Caos", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chico Science & Nação Zumbi"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Carry On", AlbumGenre = genres.Single(g => g.GenreName == "Alternative"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Chris Cornell"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "SCRIABIN: Vers la flamme", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Christopher O'Riley"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Acústico MTV [Live]", AlbumGenre = genres.Single(g => g.GenreName == "Reggae"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Cidade Negra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Cidade Negra - Hits", AlbumGenre = genres.Single(g => g.GenreName == "Reggae"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Cidade Negra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Na Pista", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Cláudio Zoli"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Chronicle, Vol. 1", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Creedence Clearwater Revival"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Chronicle, Vol. 2", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Creedence Clearwater Revival"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Into The Light", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "David Coverdale"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Come Taste The Band", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Deep Purple In Rock", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Fireball", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Machine Head", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "MK III The Final Concerts [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Purpendicular", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Slaves And Masters", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Stormbringer", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Battle Rages On", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Final Concerts (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Deep Purple"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Outbreak", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Dennis Chambers"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Djavan Ao Vivo - Vol. 02", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Djavan"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Djavan Ao Vivo - Vol. 1", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Djavan"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "MacArthur Park Suite", AlbumGenre = genres.Single(g => g.GenreName == "Disco"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Donna Summer"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Un-Led-Ed", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Dread Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best of Ed Motta", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ed Motta"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Adams, John: The Chairman Dances", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Edo de Waart & San Francisco Symphony"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Elis Regina-Minha História", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Elis Regina"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Pachelbel: Canon & Gigue", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "English Concert & Trevor Pinnock"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Unplugged", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Eric Clapton"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Cream Of Clapton", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Eric Clapton"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Unplugged", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Eric Clapton"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Respighi:Pines of Rome", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Eugene Ormandy"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Strauss: Waltzes", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Eugene Ormandy"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "King For A Day Fool For A Lifetime", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Faith No More"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Deixa Entrar", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Falamansa"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "In Your Honor [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Foo Fighters"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "In Your Honor [Disc 2]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Foo Fighters"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Colour And The Shape", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Foo Fighters"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bongo Fury", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Frank Zappa & Captain Beefheart"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Roda De Funk", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Funk Como Le Gusta"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Quanta Gente Veio Ver (Live)", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Gilberto Gil"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Quanta Gente Veio ver--Bônus De Carnaval", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Gilberto Gil"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Faceless", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Godsmack"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Meus Momentos", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Gonzaguinha"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Nielsen: The Six Symphonies", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Göteborgs Symfoniker & Neeme Järvi"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Appetite for Destruction", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Guns N' Roses"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Use Your Illusion I", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Guns N' Roses"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Use Your Illusion II", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Guns N' Roses"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Blue Moods", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Incognito"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "A Matter of Life and Death", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Brave New World", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Fear Of The Dark", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live At Donington 1992 (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live At Donington 1992 (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Rock In Rio [CD2]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Number of The Beast", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The X Factor", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Virtual XI", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "A Real Dead One", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "A Real Live One", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live After Death", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "No Prayer For The Dying", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Piece Of Mind", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Powerslave", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Rock In Rio [CD1]", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Rock In Rio [CD2]", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Seventh Son of a Seventh Son", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Somewhere in Time", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Number of The Beast", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Iron Maiden", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Iron Maiden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Mascagni: Cavalleria Rusticana", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "James Levine"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Emergency On Planet Earth", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Jamiroquai"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Are You Experienced?", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Jimi Hendrix"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Surfing with the Alien (Remastered)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Joe Satriani"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Jorge Ben Jor 25 Anos", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Jorge Ben"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Jota Quest-1995", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Jota Quest"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Living After Midnight", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Judas Priest"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Weill: The Seven Deadly Sins", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Kent Nagano and Orchestre de l'Opéra de Lyon"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Kiss", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Kiss"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Unplugged [Live]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Kiss"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "BBC Sessions [Disc 1] [Live]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "BBC Sessions [Disc 2] [Live]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Coda", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Houses Of The Holy", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "In Through The Out Door", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "IV", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Led Zeppelin I", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Led Zeppelin II", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Led Zeppelin III", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Physical Graffiti [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Physical Graffiti [Disc 2]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Presence", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Song Remains The Same (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Song Remains The Same (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Led Zeppelin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Mais Do Mesmo", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Legião Urbana"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Hits", AlbumGenre = genres.Single(g => g.GenreName == "Reggae"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Lenny Kravitz"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Hits", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Lenny Kravitz"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Hits", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Lenny Kravitz"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Tchaikovsky: The Nutcracker", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "London Symphony Orchestra & Sir Charles Mackerras"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Duos II", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Luciana Souza/Romero Lubambo"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Chill: Brazil (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Marcos Valle"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Misplaced Childhood", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Marillion"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Barulhinho Bom", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Marisa Monte"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Szymanowski: Piano Works, Vol. 1", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Martin Roscoe"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best Of Men At Work", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Men At Work"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "...And Justice For All", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Black Album", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Garage Inc. (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Garage Inc. (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Load", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Master Of Puppets", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "ReLoad", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Ride The Lightning", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "St. Anger", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Metallica"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Berlioz: Symphonie Fantastique", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Michael Tilson Thomas & San Francisco Symphony"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Prokofiev: Romeo & Juliet", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Michael Tilson Thomas & San Francisco Symphony"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Miles Ahead", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Miles Davis"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Essential Miles Davis [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Miles Davis"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Essential Miles Davis [Disc 2]", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Miles Davis"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Milton Nascimento Ao Vivo", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Milton Nascimento"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Minas", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Milton Nascimento"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Motley Crue Greatest Hits", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Mötley Crüe"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Ace Of Spades", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Motörhead"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Mozart: Chamber Music", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Nash Ensemble"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best of Beethoven", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Nicolaus Esterhazy Sinfonia"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Nevermind", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Nirvana"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Compositores", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "O Terço"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Olodum", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Olodum"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bach: The Brandenburg Concertos", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Orchestra of The Age of Enlightenment"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Acústico MTV", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Os Paralamas Do Sucesso"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Arquivo II", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Os Paralamas Do Sucesso"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Arquivo Os Paralamas Do Sucesso", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Os Paralamas Do Sucesso"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Tribute", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bark at the Moon (Remastered)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Blizzard of Ozz", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Diary of a Madman (Remastered)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "No More Tears (Remastered)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Speak of the Devil", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ozzy Osbourne"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Walking Into Clarksdale", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Page & Plant"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Beast Live", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Paul D'Ianno"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live On Two Legs [Live]", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Pearl Jam"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Riot Act", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Pearl Jam"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Ten", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Pearl Jam"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Vs.", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Pearl Jam"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Dark Side Of The Moon", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Pink Floyd"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Hits I", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Queen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Greatest Hits II", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Queen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "News Of The World", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Queen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "New Adventures In Hi-Fi", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "R.E.M."), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Raul Seixas", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Raul Seixas"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "By The Way", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Red Hot Chili Peppers"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Californication", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Red Hot Chili Peppers"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Purcell: The Fairy Queen", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Roger Norrington, London Classical Players"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Haydn: Symphonies 99 - 104", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Royal Philharmonic Orchestra & Sir Thomas Beecham"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Retrospective I (1974-1980)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Rush"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Santana - As Years Go By", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Santana"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Santana Live", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Santana"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Supernatural", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Santana"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Handel: The Messiah (Highlights)", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Scholars Baroque Ensemble"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Prokofiev: Symphony No.1", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Sergei Prokofiev & Yuri Temirkanov"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Wagner: Favourite Overtures", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Sir Georg Solti & Wiener Philharmoniker"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Maquinarama", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Skank"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "O Samba Poconé", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Skank"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "A-Sides", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Soundgarden"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Heart of the Night", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Spyro Gyra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Morning Dance", AlbumGenre = genres.Single(g => g.GenreName == "Jazz"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Spyro Gyra"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "In Step", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Stevie Ray Vaughan & Double Trouble"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Core", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Stone Temple Pilots"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Mezmerize", AlbumGenre = genres.Single(g => g.GenreName == "Metal"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "System Of A Down"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Temple of the Dog", AlbumGenre = genres.Single(g => g.GenreName == "Alternative"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Temple of the Dog"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "[1997] Black Light Syndrome", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Terry Bozzio, Tony Levin & Steve Stevens"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "South American Getaway", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The 12 Cellists of The Berlin Philharmonic"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live [Disc 1]", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Black Crowes"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Live [Disc 2]", AlbumGenre = genres.Single(g => g.GenreName == "Blues"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Black Crowes"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Beyond Good And Evil", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Cult"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Doors", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Doors"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "English Renaissance", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The King's Singers"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Police Greatest Hits", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Police"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Every Kind of Light", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Posies"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Hot Rocks, 1964-1971 (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Rolling Stones"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "No Security", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Rolling Stones"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Voodoo Lounge", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Rolling Stones"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "My Generation - The Very Best Of The Who", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "The Who"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Serie Sem Limite (Disc 1)", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Tim Maia"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Serie Sem Limite (Disc 2)", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Tim Maia"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bach: Toccata & Fugue in D Minor", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Ton Koopman"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Achtung Baby", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "B-Sides 1980-1990", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "How To Dismantle An Atomic Bomb", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Pop", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Rattle And Hum", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best Of 1980-1990", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "War", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Zooropa", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "U2"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "UB40 The Best Of - Volume Two [UK]", AlbumGenre = genres.Single(g => g.GenreName == "Reggae"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "UB40"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Diver Down", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Van Halen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "The Best Of Van Halen, Vol. I", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Van Halen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Van Halen III", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Van Halen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Van Halen", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Van Halen"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Axé Bahia 2001", AlbumGenre = genres.Single(g => g.GenreName == "Pop"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Various Artists"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Sambas De Enredo 2001", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Various Artists"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Vozes do MPB", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Various Artists"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Contraband", AlbumGenre = genres.Single(g => g.GenreName == "Rock"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Velvet Revolver"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Vinicius De Moraes", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Vinícius De Moraes"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bach: Goldberg Variations", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Wilhelm Kempff"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bartok: Violin & Viola Concertos", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Yehudi Menuhin"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Bach: The Cello Suites", AlbumGenre = genres.Single(g => g.GenreName == "Classical"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Yo-Yo Ma"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
                new Album { AlbumTitle = "Ao Vivo [IMPORT]", AlbumGenre = genres.Single(g => g.GenreName == "Latin"), AlbumPrice = 8.99M, Artist = artists.Single(a => a.ArtistName == "Zeca Pagodinho"), AlbumArtUrl = "/Content/Images/placeholder.gif" },
            }.ForEach(a => context.Albums.Add(a));
        }
    }
}